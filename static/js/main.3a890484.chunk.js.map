{"version":3,"sources":["App.tsx","components/goodsList/goodsList.tsx","index.tsx"],"names":["SortBy","GoodsList","goods","map","good","goodsFromServer","App","state","isListVisible","isReversed","sortBy","showList","setState","reverseList","prevState","sortList","sortOption","resetList","goodsCopy","this","alphabetically","sort","byLength","itemA","itemB","length","reverse","className","type","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAiBKA,E,kFCXQC,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,6BAAgBA,GAAPA,SDLTC,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGL,K,gCAAAA,E,qBAAAA,M,SAWCM,E,4MACJC,MAAe,CACbC,eAAe,EACfC,YAAY,EACZC,OAAQ,M,EAGVC,SAAW,kBAAM,EAAKC,SAAS,CAAEJ,eAAe,K,EAEhDK,YAAc,kBAAM,EAAKD,UAAS,SAAAE,GAAS,kCACtCA,GADsC,IAEzCL,YAAaK,EAAUL,iB,EAGzBM,SAAW,SAACC,GAAD,OACT,EAAKJ,SAAS,CAAEF,OAAQM,K,EAG1BC,UAAY,kBAAM,EAAKL,SAAS,CAC9BH,YAAY,EACZC,OAAQ,Q,4CAGV,WAAU,IAAD,OACDQ,EAAS,UAAOb,GACtB,EAIIc,KAAKZ,MAHPC,EADF,EACEA,cACAC,EAFF,EAEEA,WAIF,OANA,EAGEC,QAIA,KAAKV,EAAOoB,eACVF,EAAUG,OACV,MACF,KAAKrB,EAAOsB,SACVJ,EAAUG,MAAK,SAACE,EAAOC,GAAR,OAAkBD,EAAME,OAASD,EAAMC,UAU1D,OAJIhB,GACFS,EAAUQ,UAIV,sBAAKC,UAAU,MAAf,UACE,uCACCtB,EAAgBoB,OAEjB,sBAAKE,UAAU,UAAf,UACE,wBACEC,KAAK,SACLC,QAAS,kBAAM,EAAKhB,eAFtB,qBAOA,wBACEe,KAAK,SACLC,QAAS,kBAAM,EAAKd,SAASf,EAAOoB,iBAFtC,iCAOA,wBACEQ,KAAK,SACLC,QAAS,kBAAM,EAAKd,SAASf,EAAOsB,WAFtC,4BAOA,wBACEM,KAAK,SACLC,QAAS,kBAAM,EAAKZ,aAFtB,sBAQDT,EACG,cAAC,EAAD,CAAWN,MAAOgB,IAElB,wBACEU,KAAK,SACLC,QAAS,kBAAM,EAAKlB,YAFtB,0B,GApFMmB,IAAMC,WAgGTzB,IEzHf0B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.3a890484.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport { GoodsList } from './components/goodsList/goodsList';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortBy {\n  alphabetically = 'alphabetically',\n  byLength = 'byLength',\n}\n\ntype State = {\n  isListVisible: boolean;\n  isReversed: boolean;\n  sortBy: SortBy | null;\n};\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    isListVisible: false,\n    isReversed: false,\n    sortBy: null,\n  };\n\n  showList = () => this.setState({ isListVisible: true });\n\n  reverseList = () => this.setState(prevState => ({\n    ...prevState,\n    isReversed: !prevState.isReversed,\n  }));\n\n  sortList = (sortOption: SortBy) => (\n    this.setState({ sortBy: sortOption })\n  );\n\n  resetList = () => this.setState({\n    isReversed: false,\n    sortBy: null,\n  });\n\n  render() {\n    const goodsCopy = [...goodsFromServer];\n    const {\n      isListVisible,\n      isReversed,\n      sortBy,\n    } = this.state;\n\n    switch (sortBy) {\n      case SortBy.alphabetically:\n        goodsCopy.sort();\n        break;\n      case SortBy.byLength:\n        goodsCopy.sort((itemA, itemB) => itemA.length - itemB.length);\n        break;\n      default:\n        break;\n    }\n\n    if (isReversed) {\n      goodsCopy.reverse();\n    }\n\n    return (\n      <div className=\"App\">\n        <h1>Goods</h1>\n        {goodsFromServer.length}\n\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            onClick={() => this.reverseList()}\n          >\n            Reverse\n          </button>\n\n          <button\n            type=\"button\"\n            onClick={() => this.sortList(SortBy.alphabetically)}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            onClick={() => this.sortList(SortBy.byLength)}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            onClick={() => this.resetList()}\n          >\n            Reset\n          </button>\n        </div>\n\n        {isListVisible\n          ? <GoodsList goods={goodsCopy} />\n          : (\n            <button\n              type=\"button\"\n              onClick={() => this.showList()}\n            >\n              Start\n            </button>\n          )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\n\ninterface Props {\n  goods: string[],\n}\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <li key={good}>{good}</li>\n    ))}\n  </ul>\n);\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}