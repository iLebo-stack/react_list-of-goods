{"version":3,"sources":["components/goodsList/goodsList.tsx","App.tsx","index.tsx"],"names":["GoodsList","goods","map","good","goodsFromServer","App","state","isListVisible","isReversed","sortBy","showList","setState","reverseList","sortList","sortOption","resetList","goodsCopy","this","sort","itemA","itemB","length","reverse","className","type","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"4OAMaA,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,6BAAgBA,GAAPA,SCLTC,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UASIC,E,4MACJC,MAAe,CACbC,eAAe,EACfC,YAAY,EACZC,OAAQ,M,EAGVC,SAAW,kBAAM,EAAKC,SAAS,CAAEJ,eAAe,K,EAEhDK,YAAc,kBAAM,EAAKD,SAAS,CAAEH,YAAY,K,EAEhDK,SAAW,SAACC,GAAD,OACT,EAAKH,SAAS,CAAEF,OAAQK,K,EAG1BC,UAAY,kBAAM,EAAKJ,SAAS,CAC9BH,YAAY,EACZC,OAAQ,Q,4CAGV,WAAU,IAAD,OACDO,EAAS,UAAOZ,GACtB,EAIIa,KAAKX,MAHPC,EADF,EACEA,cACAC,EAFF,EAEEA,WAIF,OANA,EAGEC,QAIA,IAAK,iBACHO,EAAUE,OACV,MACF,IAAK,WACHF,EAAUE,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAME,OAASD,EAAMC,UAU1D,OAJIb,GACFQ,EAAUM,UAIV,sBAAKC,UAAU,MAAf,UACE,uCACCnB,EAAgBiB,OAEjB,sBAAKE,UAAU,UAAf,UACE,wBACEC,KAAK,SACLC,QAAS,kBAAM,EAAKb,eAFtB,qBAOA,wBACEY,KAAK,SACLC,QAAS,kBAAM,EAAKZ,SAAS,mBAF/B,iCAOA,wBACEW,KAAK,SACLC,QAAS,kBAAM,EAAKZ,SAAS,aAF/B,4BAOA,wBACEW,KAAK,SACLC,QAAS,kBAAM,EAAKV,aAFtB,sBAQDR,EACG,cAAC,EAAD,CAAWN,MAAOe,IAElB,wBACEQ,KAAK,SACLC,QAAS,kBAAM,EAAKf,YAFtB,0B,GAjFMgB,IAAMC,WA6FTtB,ICjHfuB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.eaef862a.chunk.js","sourcesContent":["import React from 'react';\n\ninterface Props {\n  goods: string[],\n}\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <li key={good}>{good}</li>\n    ))}\n  </ul>\n);\n","import React from 'react';\nimport './App.css';\nimport { GoodsList } from './components/goodsList/goodsList';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  isListVisible: boolean;\n  isReversed: boolean;\n  sortBy: 'alphabetically' | 'byLength' | null;\n};\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    isListVisible: false,\n    isReversed: false,\n    sortBy: null,\n  };\n\n  showList = () => this.setState({ isListVisible: true });\n\n  reverseList = () => this.setState({ isReversed: true });\n\n  sortList = (sortOption: 'alphabetically' | 'byLength') => (\n    this.setState({ sortBy: sortOption })\n  );\n\n  resetList = () => this.setState({\n    isReversed: false,\n    sortBy: null,\n  });\n\n  render() {\n    const goodsCopy = [...goodsFromServer];\n    const {\n      isListVisible,\n      isReversed,\n      sortBy,\n    } = this.state;\n\n    switch (sortBy) {\n      case 'alphabetically':\n        goodsCopy.sort();\n        break;\n      case 'byLength':\n        goodsCopy.sort((itemA, itemB) => itemA.length - itemB.length);\n        break;\n      default:\n        break;\n    }\n\n    if (isReversed) {\n      goodsCopy.reverse();\n    }\n\n    return (\n      <div className=\"App\">\n        <h1>Goods</h1>\n        {goodsFromServer.length}\n\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            onClick={() => this.reverseList()}\n          >\n            Reverse\n          </button>\n\n          <button\n            type=\"button\"\n            onClick={() => this.sortList('alphabetically')}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            onClick={() => this.sortList('byLength')}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            onClick={() => this.resetList()}\n          >\n            Reset\n          </button>\n        </div>\n\n        {isListVisible\n          ? <GoodsList goods={goodsCopy} />\n          : (\n            <button\n              type=\"button\"\n              onClick={() => this.showList()}\n            >\n              Start\n            </button>\n          )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}